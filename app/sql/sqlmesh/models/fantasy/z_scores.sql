MODEL (
  name fantasy.z_scores,
  kind FULL,
  description """fantasy basketball stats cumulative z scores
                 z scores calculated for each season dataset"""
);

WITH cumulative as (
select
  SEASON_ID,
  GAME_ID,
  GAME_DATE,
  PLAYER_NAME,
  PLAYER_ID,
  PLAYED_FLAG,
  IS_LAST_GAME,
  
SUM(MINUTES) OVER (
    PARTITION BY PLAYER_ID, SEASON_ID
    ORDER BY CAST(GAME_DATE AS DATE)
    ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW
) AS MINUTES_CUMULATIVE,

SUM(POINTS) OVER (
    PARTITION BY PLAYER_ID, SEASON_ID
    ORDER BY CAST(GAME_DATE AS DATE)
    ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW
) AS POINTS_CUMULATIVE,

SUM(ASSISTS) OVER (
    PARTITION BY PLAYER_ID, SEASON_ID
    ORDER BY CAST(GAME_DATE AS DATE)
    ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW
) AS ASSISTS_CUMULATIVE,

SUM(STEALS) OVER (
    PARTITION BY PLAYER_ID, SEASON_ID
    ORDER BY CAST(GAME_DATE AS DATE)
    ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW
) AS STEALS_CUMULATIVE,

SUM(BLOCKS) OVER (
    PARTITION BY PLAYER_ID, SEASON_ID
    ORDER BY CAST(GAME_DATE AS DATE)
    ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW
) AS BLOCKS_CUMULATIVE,

SUM(REBOUNDS) OVER (
    PARTITION BY PLAYER_ID, SEASON_ID
    ORDER BY CAST(GAME_DATE AS DATE)
    ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW
) AS REBOUNDS_CUMULATIVE,

SUM(THREES) OVER (
    PARTITION BY PLAYER_ID, SEASON_ID
    ORDER BY CAST(GAME_DATE AS DATE)
    ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW
) AS THREES_CUMULATIVE,

SUM(DOUBLE_DOUBLE) OVER (
    PARTITION BY PLAYER_ID, SEASON_ID
    ORDER BY CAST(GAME_DATE AS DATE)
    ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW
) AS DOUBLE_DOUBLE_CUMULATIVE,

AVG(
CASE 
    WHEN PLAYED_FLAG = 1 THEN EFG_PCT 
    ELSE NULL 
END
) OVER (
PARTITION BY PLAYER_ID, SEASON_ID
ORDER BY CAST(GAME_DATE AS DATE)
ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW
) AS AVG_EFG_PCT,

AVG(
CASE 
    WHEN PLAYED_FLAG = 1 THEN FT_PCT 
    ELSE NULL 
END
) OVER (
PARTITION BY PLAYER_ID, SEASON_ID
ORDER BY CAST(GAME_DATE AS DATE)
ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW
) AS AVG_FT_PCT

FROM fantasy.base_data

)
, season_totals as (
select *
from cumulative
where is_last_game = 1
)
,z_scores as (

SELECT
    SEASON_ID,
    PLAYER_ID,
    PLAYER_NAME,
    GAME_DATE,
    
    -- Z-scores for the cumulative stats
    (MINUTES_CUMULATIVE - AVG(MINUTES_CUMULATIVE) OVER (PARTITION BY SEASON_ID)) / STDDEV(MINUTES_CUMULATIVE) OVER (PARTITION BY SEASON_ID) AS MINUTES_Z_SCORE,

    (POINTS_CUMULATIVE - AVG(POINTS_CUMULATIVE) OVER (PARTITION BY SEASON_ID)) / STDDEV(POINTS_CUMULATIVE) OVER (PARTITION BY SEASON_ID) AS POINTS_Z_SCORE,

    (ASSISTS_CUMULATIVE - AVG(ASSISTS_CUMULATIVE) OVER (PARTITION BY SEASON_ID)) / STDDEV(ASSISTS_CUMULATIVE) OVER (PARTITION BY SEASON_ID) AS ASSISTS_Z_SCORE,

    (STEALS_CUMULATIVE - AVG(STEALS_CUMULATIVE) OVER (PARTITION BY SEASON_ID)) / STDDEV(STEALS_CUMULATIVE) OVER (PARTITION BY SEASON_ID) AS STEALS_Z_SCORE,

    (BLOCKS_CUMULATIVE - AVG(BLOCKS_CUMULATIVE) OVER (PARTITION BY SEASON_ID)) / STDDEV(BLOCKS_CUMULATIVE) OVER (PARTITION BY SEASON_ID) AS BLOCKS_Z_SCORE,

    (REBOUNDS_CUMULATIVE - AVG(REBOUNDS_CUMULATIVE) OVER (PARTITION BY SEASON_ID)) / STDDEV(REBOUNDS_CUMULATIVE) OVER (PARTITION BY SEASON_ID) AS REBOUNDS_Z_SCORE,

    (THREES_CUMULATIVE - AVG(THREES_CUMULATIVE) OVER (PARTITION BY SEASON_ID)) / STDDEV(THREES_CUMULATIVE) OVER (PARTITION BY SEASON_ID) AS THREES_Z_SCORE,

    (DOUBLE_DOUBLE_CUMULATIVE - AVG(DOUBLE_DOUBLE_CUMULATIVE) OVER (PARTITION BY SEASON_ID)) / STDDEV(DOUBLE_DOUBLE_CUMULATIVE) OVER (PARTITION BY SEASON_ID) AS DOUBLE_DOUBLE_Z_SCORE,

    -- Z-scores for averages (EFG and FT%)
    (AVG_EFG_PCT - AVG(AVG_EFG_PCT) OVER (PARTITION BY SEASON_ID)) / STDDEV(AVG_EFG_PCT) OVER (PARTITION BY SEASON_ID) AS EFG_PCT_Z_SCORE,

    (AVG_FT_PCT - AVG(AVG_FT_PCT) OVER (PARTITION BY SEASON_ID)) / STDDEV(AVG_FT_PCT) OVER (PARTITION BY SEASON_ID) AS FT_PCT_Z_SCORE

FROM season_totals
)

select *,
POINTS_Z_SCORE+
ASSISTS_Z_SCORE+
STEALS_Z_SCORE+
BLOCKS_Z_SCORE+
REBOUNDS_Z_SCORE+
THREES_Z_SCORE+
DOUBLE_DOUBLE_Z_SCORE+
EFG_PCT_Z_SCORE+
FT_PCT_Z_SCORE AS TOTAL_Z



from z_scores

order by TOTAL_Z desc

; 